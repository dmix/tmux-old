# ------------------------------------------------------------
#
# tmux config
#
# ------------------------------------------------------------


# Themes
# ------------------------------------------------------------

source ~/tmux/themes/t1mxg0d
source ~/tmux/themes/tmuxline


# Keybindings
# ------------------------------------------------------------

# set window split
bind-key v split-window -h
bind-key s split-window

# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

# # Allows us to use C-a a <command> to send commands to a TMUX session inside
# # another TMUX session
bind-key a send-prefix

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# hjkl pane traversal
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal


# UI
# ------------------------------------------------------------

# Window
set-window-option -g automatic-rename
set-window-option -g alternate-screen on
setw -g aggressive-resize on

# status bar
set-option -g status-utf8 on

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Start numbering at 1
set -g base-index 1

# Allows for faster key repetition
set -s escape-time 0

# rm mouse mode fail
set -g mode-mouse off

# terminal
set -g default-terminal "screen-256color"
set -ga terminal-overrides ',xterm*:smcup@:rmcup@'

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
